filter(year == 20) %>%
ggplot(aes(x = month, y = Cases)) +
geom_point() + scale_color_brewer() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df %>%
filter(year == 20) %>%
ggplot(aes(x = month, y = Cases)) +
geom_point() + scale_color_brewer() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df %>%
filter(year == 20) %>%
ggplot(aes(x = month, y = Cases)) +
geom_point() + scale_color_brewer()
df %>%
filter(year == 20) %>%
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province, color = Province)) + scale_color_brewer()
df %>%
filter(year == 20) %>%
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province))
df %>%
filter(year == 20) %>%
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province, color = Province))
df %>%
filter(year == 20) %>%
ggplot(aes(x = month, y = Cases)) +
geom_point(aes(group = Province, color = Province))
df %>%
filter(year == 20) %>%
ggplot(aes(x = month, y = max(Cases))) +
geom_line(aes(group = Province, color = Province))
df %>%
filter(year == 20) %>%
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province, color = Province))
df %>%
filter(year == 20) %>%
group_by(Province) %>% top_n(1, pt)
df %>%
filter(year == 20) %>%
group_by(Province) %>% top_n(1)
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province, color = Province))
df %>%
filter(year == 20) %>%
group_by(Cases) %>% top_n(1)
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province, color = Province))
df %>%
filter(year == 20) %>%
group_by(Cases) %>% top_n(1) %>%
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province, color = Province))
df %>%
filter(year == 20) %>%
group_by(Cases) %>% top_n(1) %>%
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province, color = Province))
df %>%
group_by(Province) %>%
filter(Cases == max(Cases))
View(df)
df %>%
filter(year == 20) %>%
filter(Province =! "") %>%
group_by(Cases) %>% top_n(1) %>%
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province, color = Province))
df %>%
filter(year == 20) %>%
filter(Province != "") %>%
group_by(Cases) %>% top_n(1) %>%
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province, color = Province))
df %>%
filter(year == 20) %>%
filter(Province != "") %>%
group_by(Cases) %>%
slice(which.max(n)) %>%
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province, color = Province))
df %>%
filter(year == 20) %>%
filter(Province != "") %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province, color = Province))
df %>%
filter(year == 20) %>%
filter(Province != "") %>%
group_by(Province, month) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province, color = Province))
df %>%
filter(year == 20) %>%
filter(Province != "") %>%
group_by(Province, month) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province, color = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2020") +
df %>%
filter(year == 20) %>%
filter(Province != "") %>%
group_by(Province, month) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month, y = Cases)) +
geom_line(aes(group = Province, color = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2020")
df$month_abr <-  month.abb[df$month]
df$month<- strftime(df$Date,"%m")
df$year<- strftime(df$Date,"%y")
df$month <- as.factor(df$month)
View(df)
df %>%
filter(year == 20) %>%
filter(Province != "") %>%
group_by(Province, month) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_line(aes(group = Province, color = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2020")
df %>%
filter(year == 20) %>%
filter(Province != "") %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_line(aes(group = Province, color = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2020")
df$month_abr <-  month.abb[df$month]
df$month_abr <- as.factor(df$month_abr)
df$month<- strftime(df$Date,"%m")
df$year<- strftime(df$Date,"%y")
df$month <- as.factor(df$month)
df %>%
filter(year == 20) %>%
filter(Province != "") %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_line(aes(group = Province, color = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2020")
month_abr
df$month_abr
df$month_abr <-  month.abb[df$month]
df$month_abr <- as.factor(df$month_abr)
df$month_abr <- factor(month_abr, levels = c("Jan", "Feb", "March", "Apr", "May", "Jun", "Jul",
"Aug", "Sep", "Oct", "Nov", "Dec"))
df$month_abr <-  month.abb[df$month]
df$month_abr <- as.factor(df$month_abr)
df$month_abr <- factor(df$month_abr, levels = c("Jan", "Feb", "March", "Apr", "May", "Jun", "Jul",
"Aug", "Sep", "Oct", "Nov", "Dec"))
df$month<- strftime(df$Date,"%m")
df$year<- strftime(df$Date,"%y")
df$month <- as.factor(df$month)
df %>%
filter(year == 20) %>%
filter(Province != "") %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_line(aes(group = Province, color = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2020")
summary(df$month_abr)
df$month_abr <-  month.abb[df$month]
df$month_abr <- as.factor(df$month_abr)
df$month_abr <- factor(df$month_abr, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
"Aug", "Sep", "Oct", "Nov", "Dec"))
df$month<- strftime(df$Date,"%m")
df$year<- strftime(df$Date,"%y")
df$month <- as.factor(df$month)
df %>%
filter(year == 20) %>%
filter(Province != "") %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_line(aes(group = Province, color = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2020")
df %>%
filter(year == 21) %>%
filter(Province != "") %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_line(aes(group = Province, color = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2021")
df %>%
filter(year == 21) %>%
filter(Province != "") %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_point(aes(group = Province, color = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2021")
df %>%
filter(year == 21) %>%
filter(Province != "") %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_point(aes(group = Province, color = Province)) +
geom_line() +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2021")
df %>%
filter(year == 21) %>%
filter(Province != "") %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_point(aes(group = Province, color = Province)) +
geom_line(group = Province) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2021")
df %>%
filter(year == 21) %>%
filter(Province != "") %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_point(aes(group = Province, color = Province)) +
geom_line(aes(group = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2021")
df %>%
filter(year == 21) %>%
filter(Province != "") %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_point(aes(group = Province, color = Province)) +
geom_line(aes(group = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2021")
install.packages("plotly")
shiny::runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/QMSS Course Files/CAnD3/data')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
df$month_abr <-  month.abb[df$month]
df$month_abr <- as.factor(df$month_abr)
df$month_abr <- factor(df$month_abr, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
"Aug", "Sep", "Oct", "Nov", "Dec"))
df$month<- strftime(df$Date,"%m")
df$year<- strftime(df$Date,"%y")
df$month <- as.factor(df$month)
df <- df %>%
filter(Province != "")
df %>%
filter(year == 20) %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_line(aes(group = Province, color = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2020")
df %>%
filter(year == 21) %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_point(aes(group = Province, color = Province)) +
geom_line(aes(group = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2021")
View(df)
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
df$month_abr <-  month.abb[df$month]
df$month_abr <- as.factor(df$month_abr)
df$month_abr <- factor(df$month_abr, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
"Aug", "Sep", "Oct", "Nov", "Dec"))
df$month<- strftime(df$Date,"%m")
df$year<- strftime(df$Date,"%y")
df$year <- df$year + 2000
df$tear
df$year
summary(df$year)
df$month_abr <-  month.abb[df$month]
df$month_abr <- as.factor(df$month_abr)
df$month_abr <- factor(df$month_abr, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
"Aug", "Sep", "Oct", "Nov", "Dec"))
df$month<- strftime(df$Date,"%m")
df$year<- strftime(df$Date,"%y")
df$year <- as.factor(df$year)
df$year <- df$year + 2000
df$month <- as.factor(df$month)
df <- df %>%
filter(Province != "")
View(df)
df$month_abr <-  month.abb[df$month]
df$month_abr <- as.factor(df$month_abr)
df$month_abr <- factor(df$month_abr, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
"Aug", "Sep", "Oct", "Nov", "Dec"))
df$month<- strftime(df$Date,"%m")
df$year<- strftime(df$Date,"%y")
df$year <- as.numeric(df$year)
df$year <- df$year + 2000
df$month <- as.factor(df$month)
df <- df %>%
filter(Province != "")
View(df)
df %>%
filter(year == 2020) %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_line(aes(group = Province, color = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2020")
df %>%
filter(year == 2021) %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_point(aes(group = Province, color = Province)) +
geom_line(aes(group = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2021")
runApp('Documents/R Files/Personal_Practice1')
df$month_abr <-  month.abb[df$month]
df$month_abr <- as.factor(df$month_abr)
df$month_abr <- factor(df$month_abr, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
"Aug", "Sep", "Oct", "Nov", "Dec"))
df$month<- strftime(df$Date,"%m")
df$year<- strftime(df$Date,"%y")
df$year <- as.numeric(df$year)
df$year <- df$year + 2000
df$month <- as.factor(df$month)
df <- df %>%
filter(Province != "") %>%
select(-CountryCode, -City, -CityCode, -Lat, -Lon, -Status, -month)
df$month_abr <-  month.abb[df$month]
df$month_abr <- as.factor(df$month_abr)
df$month_abr <- factor(df$month_abr, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
"Aug", "Sep", "Oct", "Nov", "Dec"))
df$month<- strftime(df$Date,"%m")
df$year<- strftime(df$Date,"%y")
df$year <- as.numeric(df$year)
df$year <- df$year + 2000
df$month <- as.factor(df$month)
df <- df %>%
filter(Province != "") %>%
select(-CountryCode, -City, -CityCode, -Lat, -Lon, -Status, -month)
View(df)
json <- httr::GET("https://api.covid19api.com/country/canada/status/confirmed")
covid_canada <- rawToChar(json$content)
df <- fromJSON(covid_canada)
df$month_abr <-  month.abb[df$month]
View(df)
df$month<- strftime(df$Date,"%m")
df$year<- strftime(df$Date,"%y")
df$year <- as.numeric(df$year)
df$year <- df$year + 2000
df$month <- as.factor(df$month)
df$month_abr <-  month.abb[df$month]
df$month_abr <- as.factor(df$month_abr)
df$month_abr <- factor(df$month_abr, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
"Aug", "Sep", "Oct", "Nov", "Dec"))
df <- df %>%
filter(Province != "") %>%
select(-CountryCode, -City, -CityCode, -Lat, -Lon, -Status, -month)
View(df)
df %>%
filter(year == 2020) %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_line(aes(group = Province, color = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2020")
df %>%
filter(year == 2021) %>%
group_by(Province, month_abr) %>%
filter(Cases == max(Cases)) %>%
ggplot(aes(x = month_abr, y = Cases)) +
geom_point(aes(group = Province, color = Province)) +
geom_line(aes(group = Province)) +
xlab("Month") + ylab("Total Cases") +
ggtitle("Total Cases by Province in 2021")
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
View(df)
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
shiny::runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
shiny::runApp('Documents/R Files/Personal_Practice1')
knitr::opts_chunk$set(echo = TRUE)
json <- httr::GET("https://api.covid19api.com/country/canada/status/confirmed")
covid_canada <- rawToChar(json$content)
df <- fromJSON(covid_canada)
shiny::runApp('Documents/R Files/Personal_Practice1')
shiny::runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp()
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp()
runApp()
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
runApp('Documents/R Files/Personal_Practice1')
shiny::runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
shiny::runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
shiny::runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
shiny::runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
shiny::runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp()
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
shiny::runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
shiny::runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp()
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp()
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp()
runApp()
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
shiny::runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
runApp()
runApp()
runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
shiny::runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
shiny::runApp('Documents/R Files/Personal_Practice1/Covid_Canada_Shiny_Dashboard')
